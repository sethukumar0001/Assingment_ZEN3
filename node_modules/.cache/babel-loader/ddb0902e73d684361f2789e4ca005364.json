{"ast":null,"code":"var _jsxFileName = \"/home/sethu/Desktop/test_zen3/src/App.js\";\n//******************************************\n//****** APP.JS - Main App Entry Point *****\n//******************************************\nimport React, { use } from 'react';\nimport { Provider } from 'react-redux';\nimport PersistedStore from '../src/store/store/PersistedStore';\nimport Home from \"./components/Home\";\nimport AddItem from './components/AddItem';\nimport store from './store/store/index';\n\nfunction App() {\n  const downnload = () => {\n    var data = [['name1', 'city1', 'some other info'], ['name2', 'city2', 'more info']]; // Building the CSV from the Data two-dimensional array\n    // Each column is separated by \";\" and new line \"\\n\" for next row\n\n    var csvContent = '';\n    data.forEach(function (infoArray, index) {\n      const dataString = infoArray.join(';');\n      csvContent += index < data.length ? dataString + '\\n' : dataString;\n    }); // The download function takes a CSV string, the filename and mimeType as parameters\n    // Scroll/look down at the bottom of this snippet to see how download is called\n\n    var download = function (content, fileName, mimeType) {\n      var a = document.createElement('a');\n      mimeType = mimeType || 'application/octet-stream';\n\n      if (navigator.msSaveBlob) {\n        // IE10\n        navigator.msSaveBlob(new Blob([content], {\n          type: mimeType\n        }), fileName);\n      } else if (URL && 'download' in a) {\n        //html5 A[download]\n        a.href = URL.createObjectURL(new Blob([content], {\n          type: mimeType\n        }));\n        a.setAttribute('download', fileName);\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      } else {\n        window.location.href = 'data:application/octet-stream,' + encodeURIComponent(content); // only this mime type is supported\n      }\n    };\n\n    download(csvContent, 'dowload.csv', 'text/csv;encoding:utf-8');\n  };\n\n  console.log(store.getState());\n  return React.createElement(Provider, {\n    store: PersistedStore.getDefaultStore().store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: downnload,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Download\")), React.createElement(AddItem, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(Home, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/sethu/Desktop/test_zen3/src/App.js"],"names":["React","use","Provider","PersistedStore","Home","AddItem","store","App","downnload","data","csvContent","forEach","infoArray","index","dataString","join","length","download","content","fileName","mimeType","a","document","createElement","navigator","msSaveBlob","Blob","type","URL","href","createObjectURL","setAttribute","body","appendChild","click","removeChild","window","location","encodeURIComponent","console","log","getState","getDefaultStore"],"mappings":";AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,GAAhB,QAA2B,OAA3B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAGA,SAASC,GAAT,GAAc;AAEZ,QAAMC,SAAS,GAAE,MAAI;AACnB,QAAIC,IAAI,GAAG,CACT,CAAC,OAAD,EAAU,OAAV,EAAmB,iBAAnB,CADS,EAET,CAAC,OAAD,EAAU,OAAV,EAAmB,WAAnB,CAFS,CAAX,CADmB,CAMnB;AACA;;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAD,IAAAA,IAAI,CAACE,OAAL,CAAa,UAASC,SAAT,EAAoBC,KAApB,EAA2B;AACtC,YAAMC,UAAU,GAAGF,SAAS,CAACG,IAAV,CAAe,GAAf,CAAnB;AACAL,MAAAA,UAAU,IAAIG,KAAK,GAAGJ,IAAI,CAACO,MAAb,GAAsBF,UAAU,GAAG,IAAnC,GAA0CA,UAAxD;AACD,KAHD,EATmB,CAcnB;AACA;;AACA,QAAIG,QAAQ,GAAG,UAASC,OAAT,EAAkBC,QAAlB,EAA4BC,QAA5B,EAAsC;AACnD,UAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAR;AACAH,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,0BAAvB;;AAEA,UAAII,SAAS,CAACC,UAAd,EAA0B;AAAE;AAC1BD,QAAAA,SAAS,CAACC,UAAV,CAAqB,IAAIC,IAAJ,CAAS,CAACR,OAAD,CAAT,EAAoB;AACvCS,UAAAA,IAAI,EAAEP;AADiC,SAApB,CAArB,EAEID,QAFJ;AAGD,OAJD,MAIO,IAAIS,GAAG,IAAI,cAAcP,CAAzB,EAA4B;AAAE;AACnCA,QAAAA,CAAC,CAACQ,IAAF,GAASD,GAAG,CAACE,eAAJ,CAAoB,IAAIJ,IAAJ,CAAS,CAACR,OAAD,CAAT,EAAoB;AAC/CS,UAAAA,IAAI,EAAEP;AADyC,SAApB,CAApB,CAAT;AAGAC,QAAAA,CAAC,CAACU,YAAF,CAAe,UAAf,EAA2BZ,QAA3B;AACAG,QAAAA,QAAQ,CAACU,IAAT,CAAcC,WAAd,CAA0BZ,CAA1B;AACAA,QAAAA,CAAC,CAACa,KAAF;AACAZ,QAAAA,QAAQ,CAACU,IAAT,CAAcG,WAAd,CAA0Bd,CAA1B;AACD,OARM,MAQA;AACLe,QAAAA,MAAM,CAACC,QAAP,CAAgBR,IAAhB,GAAuB,mCAAmCS,kBAAkB,CAACpB,OAAD,CAA5E,CADK,CACkF;AACxF;AACF,KAnBD;;AAqBAD,IAAAA,QAAQ,CAACP,UAAD,EAAa,aAAb,EAA4B,yBAA5B,CAAR;AAED,GAvCD;;AAyCE6B,EAAAA,OAAO,CAACC,GAAR,CAAYlC,KAAK,CAACmC,QAAN,EAAZ;AACA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEtC,cAAc,CAACuC,eAAf,GAAiCpC,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAIE,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,EAIA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADF;AASH;;AAED,eAAeD,GAAf","sourcesContent":["//******************************************\n//****** APP.JS - Main App Entry Point *****\n//******************************************\n\nimport React, { use } from 'react';\nimport {Provider} from 'react-redux';\nimport PersistedStore from '../src/store/store/PersistedStore'\nimport Home from \"./components/Home\";\nimport AddItem from './components/AddItem';\nimport store from './store/store/index';\n\n\nfunction App(){\n\n  const downnload =()=>{\n    var data = [\n      ['name1', 'city1', 'some other info'],\n      ['name2', 'city2', 'more info']\n    ];\n    \n    // Building the CSV from the Data two-dimensional array\n    // Each column is separated by \";\" and new line \"\\n\" for next row\n    var csvContent = '';\n    data.forEach(function(infoArray, index) {\n      const dataString = infoArray.join(';');\n      csvContent += index < data.length ? dataString + '\\n' : dataString;\n    });\n    \n    // The download function takes a CSV string, the filename and mimeType as parameters\n    // Scroll/look down at the bottom of this snippet to see how download is called\n    var download = function(content, fileName, mimeType) {\n      var a = document.createElement('a');\n      mimeType = mimeType || 'application/octet-stream';\n    \n      if (navigator.msSaveBlob) { // IE10\n        navigator.msSaveBlob(new Blob([content], {\n          type: mimeType\n        }), fileName);\n      } else if (URL && 'download' in a) { //html5 A[download]\n        a.href = URL.createObjectURL(new Blob([content], {\n          type: mimeType\n        }));\n        a.setAttribute('download', fileName);\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n      } else {\n        window.location.href = 'data:application/octet-stream,' + encodeURIComponent(content); // only this mime type is supported\n      }\n    }\n    \n    download(csvContent, 'dowload.csv', 'text/csv;encoding:utf-8');\n    \n  }\n\n    console.log(store.getState());\n    return (\n      <Provider store={PersistedStore.getDefaultStore().store}>\n        <div>\n          <button onClick = {downnload}>Download</button>\n        </div>\n      <AddItem />\n      <Home />\n      </Provider>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}