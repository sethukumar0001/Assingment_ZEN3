{"ast":null,"code":"// import {REGISTER} from '../actions/types';\nimport { combineReducers } from 'redux';\n\nconst AddItemReducer = (data = [], action) => {\n  switch (action.type) {\n    case 'ADDITEM':\n      console.log(action.payload);\n      return [...data, action.payload];\n\n    case 'DELETE':\n      let newArray = [...data];\n      return newArray.filter(newArray => newArray.id !== action.payload.id);\n\n    case 'INCREASE':\n      data = [...data];\n      console.log(action.payload.id);\n      const index = data.map(item => item.id).indexOf(action.payload.id);\n      console.log('Index: ', index); //  console.log(data[indexOf(action.payload.id)])\n\n      data[index].quantity += 1;\n      return [...data];\n    // data[action.payload.id]\n\n    case 'DECRESE':\n      const index1 = data.map(item => item.id).indexOf(action.payload.id);\n      console.log('Index: ', index1);\n      console.log(action.payload.id);\n      data[index].quantity -= 1;\n      return [...data];\n\n    default:\n      return data;\n  }\n};\n\nexport default combineReducers({\n  AddItemReducer\n});","map":{"version":3,"sources":["/home/sethu/Desktop/Registration/frontend/src/store/reducers/index.js"],"names":["combineReducers","AddItemReducer","data","action","type","console","log","payload","newArray","filter","id","index","map","item","indexOf","quantity","index1"],"mappings":"AACA;AACA,SAAQA,eAAR,QAA8B,OAA9B;;AAEA,MAAMC,cAAc,GAAG,CAACC,IAAI,GAAC,EAAN,EAASC,MAAT,KAAkB;AACrC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,SAAL;AAEQC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACJ,aAAO,CAAC,GAAGL,IAAJ,EAASC,MAAM,CAACI,OAAhB,CAAP;;AAEA,SAAK,QAAL;AACA,UAAIC,QAAQ,GAAG,CAAC,GAAGN,IAAJ,CAAf;AACN,aAAOM,QAAQ,CAACC,MAAT,CACLD,QAAQ,IAAIA,QAAQ,CAACE,EAAT,KAAgBP,MAAM,CAACI,OAAP,CAAeG,EADtC,CAAP;;AAGM,SAAK,UAAL;AACIR,MAAAA,IAAI,GAAC,CAAC,GAAGA,IAAJ,CAAL;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeG,EAA3B;AACA,YAAMC,KAAK,GAAET,IAAI,CAACU,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACH,EAAtB,EAA0BI,OAA1B,CAAkCX,MAAM,CAACI,OAAP,CAAeG,EAAjD,CAAb;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,KAAvB,EALY,CAME;;AACAT,MAAAA,IAAI,CAACS,KAAD,CAAJ,CAAYI,QAAZ,IAAsB,CAAtB;AACA,aAAO,CAAC,GAAGb,IAAJ,CAAP;AACF;;AACA,SAAK,SAAL;AACQ,YAAMc,MAAM,GAAEd,IAAI,CAACU,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACH,EAAtB,EAA0BI,OAA1B,CAAkCX,MAAM,CAACI,OAAP,CAAeG,EAAjD,CAAd;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBU,MAAvB;AAEJX,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAP,CAAeG,EAA3B;AACAR,MAAAA,IAAI,CAACS,KAAD,CAAJ,CAAYI,QAAZ,IAAsB,CAAtB;AACJ,aAAO,CAAC,GAAGb,IAAJ,CAAP;;AAEA;AACI,aAAOA,IAAP;AA9BZ;AAgCH,CAjCD;;AAmCA,eAAeF,eAAe,CAAC;AAC3BC,EAAAA;AAD2B,CAAD,CAA9B","sourcesContent":["\n// import {REGISTER} from '../actions/types';\nimport {combineReducers} from 'redux';\n\nconst AddItemReducer = (data=[],action)=>{\n    switch(action.type){\n        case 'ADDITEM':\n               \n                console.log(action.payload)\n            return [...data,action.payload]\n            \n            case 'DELETE':  \n            let newArray = [...data]\n      return newArray.filter(\n        newArray => newArray.id !== action.payload.id\n      )\n            case 'INCREASE':\n                data=[...data]\n\n                console.log(action.payload.id)\n                const index= data.map(item => item.id).indexOf(action.payload.id);\nconsole.log('Index: ', index);\n              //  console.log(data[indexOf(action.payload.id)])\n              data[index].quantity+=1\n              return [...data]\n            // data[action.payload.id]\n            case 'DECRESE':\n                    const index1= data.map(item => item.id).indexOf(action.payload.id);\n                    console.log('Index: ', index1);\n                   \n                console.log(action.payload.id);\n                data[index].quantity-=1\n            return [...data]\n                \n            default:\n                return data\n    }\n}\n\nexport default combineReducers({\n    AddItemReducer\n})"]},"metadata":{},"sourceType":"module"}